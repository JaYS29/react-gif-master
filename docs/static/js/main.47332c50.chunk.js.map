{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","src","alt","getGifs","category","a","process","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","key","GifExpertApp","ReactDOM","render","GifExpert","document","getElementById"],"mappings":"yMA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KASzC,OAEE,0BAAMC,UAAU,oBAAoBC,SARjB,SAAAC,GACnBA,EAAEC,iBACFL,EAAWM,OAAOC,OAAS,GAAKT,GAAc,SAAAU,GAAU,OAAKR,GAAL,mBAAoBQ,OAC5EP,EAAc,MAMZ,2BACEQ,KAAK,OACLC,MAAOV,EACPW,SAAU,SAAAP,GAAC,OAAIH,EAAcG,EAAEQ,OAAOF,UAExC,6BACA,4BAAQD,KAAK,UAAb,aCXSI,EARK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,yBAAKd,UAAU,QACb,yBAAKe,IAAKD,EAAKE,IAAKH,M,uBCLbI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfL,EAFe,uDAEuCM,mCAFvC,cAE4EC,UAAUH,GAFtF,sBAGHI,MAAMR,GAHH,cAGfS,EAHe,gBAIEA,EAAIC,OAJN,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVjB,kBAcdY,GAdc,4CAAH,sDC+BLK,EA1BC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRlB,EAAQC,GACLkB,MAAK,SAAAC,GACJH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGd,CAACd,IAEGe,EDZmBK,CAAapB,GAA/BO,EAFwB,EAExBA,KAAMO,EAFkB,EAElBA,QAId,OACE,oCACE,wBAAIhC,UAAU,gBAAgBkB,EAASqB,eACtCP,GAAW,wBAAIhC,UAAU,kDAAd,cACZ,yBAAKA,UAAU,YAIXyB,EAAKE,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,eAAaY,IAAKZ,EAAIhB,IAAQgB,UEOlCa,EAtBM,WAAO,IAAD,EAEW5C,mBAAS,IAFpB,mBAElBS,EAFkB,KAENV,EAFM,KAIzB,OACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,iBACb,8CACA,kBAAC,EAAD,CAAaJ,cAAeA,KAK5BU,EAAWqB,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CAASsB,IAAKtB,EAAUA,SAAUA,S,MCZ5CwB,IAASC,OACP,kBAACC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.47332c50.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    inputValue.trim().length > 2 && setCategories(categories => [inputValue, ...categories])\n    setInputValue('')\n  }\n\n  return (\n\n    <form className=\"new-category-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n      <br />\n      <button type=\"submit\">Agregar</button>\n    </form>\n\n  );\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react';\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card\">\n      <img src={url} alt={title} />\n    </div>\n  );\n}\n\nexport default GifGridItem;","export const getGifs = async (category) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_GIPHY_KEY}&q=${encodeURI(category)}&limit=10`\n  const res = await fetch(url);\n  const { data } = await res.json()\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n\n  return gifs;\n}","import React from 'react'\nimport GifGridItem from './GifGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nconst GifGrid = ({ category }) => {\n\n  const { data, loading } = useFetchGifs(category)\n\n\n\n  return (\n    <>\n      <h1 className=\"gif-category\">{category.toUpperCase()}</h1>\n      {loading && <h1 className=\"loading animate__animated animate__zoomOutDown\">Loading...</h1>}\n      <div className=\"gif-grid\">\n\n        {\n\n          data.map(img => {\n            return <GifGridItem key={img.id} {...img} />\n\n          })\n\n        }\n\n      </div>\n    </>\n  );\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category)\n      .then(imgs => {\n        setState({\n          data: imgs,\n          loading: false\n        })\n      })\n  }, [category])\n\n  return state;\n}","import React, { useState } from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState([])\n\n  return (\n    <div className=\"container\">\n      <div className=\"category-form\">\n        <h2>Gif Expert App</h2>\n        <AddCategory setCategories={setCategories} />\n      </div>\n\n      {\n\n        categories.map(category =>\n          <GifGrid key={category} category={category} />\n        )\n      }\n\n    </div>\n  );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpert';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}